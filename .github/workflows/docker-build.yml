name: Build Docker Images

on:
  push:
    branches: [ main ]
    paths:
      - '**/Dockerfile'
      - '.github/workflows/docker-build.yml'
  pull_request:
    branches: [ main ]
    paths:
      - '**/Dockerfile'
      - '.github/workflows/docker-build.yml'
  # Allow manual trigger
  workflow_dispatch:

jobs:
  discover:
    name: Discover Dockerfiles
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.discover.outputs.matrix }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Discover Dockerfiles
        id: discover
        run: |
          # Find all Dockerfiles recursively
          DOCKERFILES=$(find . -type f -name "Dockerfile" -not -path "*/\.*")
          
          # Initialize matrix json
          echo "Building matrix..."
          JSON="{"
          JSON="${JSON}\"include\":["
          
          FIRST=1
          for DOCKERFILE in $DOCKERFILES; do
            # Get directory path and name
            DIR=$(dirname "$DOCKERFILE")
            NAME=$(basename "$DIR" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9-]/-/g' | sed 's/-\+/-/g' | sed 's/^-\|-$//g')
            
            # Skip if name is empty after sanitization
            if [ -z "$NAME" ]; then
              continue
            }
            
            # Add comma if not first entry
            if [ "$FIRST" -eq 0 ]; then
              JSON="${JSON},"
            fi
            FIRST=0
            
            # Add build configuration
            JSON="${JSON}{"
            JSON="${JSON}\"name\":\"$NAME\","
            JSON="${JSON}\"dockerfile\":\"$DOCKERFILE\","
            JSON="${JSON}\"context\":\"$DIR\""
            JSON="${JSON}}"
          done
          
          JSON="${JSON}]}"
          
          # Set output
          echo "matrix=$JSON" >> $GITHUB_OUTPUT
          
          # Debug output
          echo "Generated matrix:"
          echo "$JSON" | jq .

  build:
    name: Build and Push
    needs: discover
    if: ${{ needs.discover.outputs.matrix != '{"include":[]}' }}
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.discover.outputs.matrix) }}
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate tags
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: lazarevcloud/${{ matrix.name }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=sha,enable=true,priority=100,prefix=,suffix=,format=short

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max