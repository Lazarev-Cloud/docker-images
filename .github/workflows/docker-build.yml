name: Build Docker Images

on:
  push:
    branches:
      - main

jobs:
  discover:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.find_dockerfiles.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Find Dockerfiles
        id: find_dockerfiles
        run: |
          # Initialize the matrix JSON
          echo "matrix={\"include\":[" >> $GITHUB_OUTPUT
          
          # Flag for first item (to handle commas)
          first=true
          
          # Find and process each Dockerfile
          find . -name "Dockerfile" -print0 | while IFS= read -r -d $'\0' dockerfile; do
            dir=$(dirname "$dockerfile")
            name=$(basename "$dir" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9-]/-/g')
            
            # Add comma if not first item
            if [ "$first" = true ]; then
              first=false
            else
              echo "," >> $GITHUB_OUTPUT
            fi
            
            # Add this Dockerfile to the matrix
            echo "{\"dockerfile\":\"$dockerfile\",\"context\":\"$dir\",\"name\":\"$name\"}" >> $GITHUB_OUTPUT
          done
          
          # Close the matrix JSON
          echo "]}" >> $GITHUB_OUTPUT

  build:
    needs: discover
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.discover.outputs.matrix) }}
      fail-fast: false
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Images
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          tags: |
            lazarevcloud/${{ matrix.name }}:latest
            lazarevcloud/${{ matrix.name }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max