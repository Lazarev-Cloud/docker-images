# .github/workflows/docker-build.yml

name: Build and Push Docker Images

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch
  pull_request:
    branches:
      - main  # Trigger on pull requests targeting the main branch

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set up QEMU for multi-platform builds (optional)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # Step 3: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 4: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 5: Find all Dockerfiles and prepare the matrix
      - name: Find Dockerfiles and Set Matrix
        id: set-matrix
        run: |
          echo "Finding all Dockerfiles..."
          # Find all Dockerfiles recursively and extract their directories
          dockerfiles=$(find . -type f -name 'Dockerfile')
          
          if [ -z "$dockerfiles" ]; then
            echo "No Dockerfiles found."
            echo "matrix={}" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Initialize JSON for matrix
          json="{\"dockerfiles\": ["
          first=true

          for df in $dockerfiles; do
            dir=$(dirname "$df")
            # Extract the folder name to use as the image name
            image_name=$(basename "$dir")
            # Replace any spaces or special characters if necessary
            image_name=$(echo "$image_name" | tr ' ' '-')

            if [ "$first" = true ]; then
              first=false
            else
              json+=", "
            fi

            # Add each Dockerfile details to the matrix
            json+="{\"path\": \"$df\", \"context\": \"$dir\", \"image_name\": \"$image_name\"}"
          done

          json+="]}"
          echo "Matrix JSON: $json"
          echo "matrix=$json" >> $GITHUB_OUTPUT

      # Step 6: Build and Push Docker Images using Matrix Strategy
      - name: Build and Push Docker Images
        if: steps.set-matrix.outputs.matrix != '{}'
        uses: docker/build-push-action@v4
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.path }}
          push: true
          tags: |
            lazarevcloud/${{ matrix.image_name }}:latest
        # Define a strategy matrix based on the found Dockerfiles
        strategy:
          matrix: ${{fromJson(steps.set-matrix.outputs.matrix)}}
          fail-fast: false
